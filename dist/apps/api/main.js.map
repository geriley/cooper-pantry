{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"typeorm\"","webpack:///./apps/api/src/app/entities/pantry.entity.ts","webpack:///./apps/api/src/app/entities/index.ts","webpack:///./apps/api/src/app/services/resource/pantry-resource.service.ts","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/services/repository/pantry-repo.service.ts","webpack:///./libs/api-interfaces/src/index.ts","webpack:///./apps/api/src/app/services/repository/index.ts","webpack:///./apps/api/src/app/common/index.ts","webpack:///./apps/api/src/app/entities/modules/index.ts","webpack:///./apps/api/src/app/entities/modules/pantry.module.ts","webpack:///./apps/api/src/app/common/models/index.ts","webpack:///external \"@nestjs/core\"","webpack:///./apps/api/src/app/app.module.ts","webpack:///external \"@nestjs/serve-static\"","webpack:///external \"path\"","webpack:///./apps/api/src/app/app.controller.ts","webpack:///external \"pg-connection-string\"","webpack:///./apps/api/src/app/controllers/modules/index.ts","webpack:///./apps/api/src/app/controllers/modules/pantry-http.module.ts","webpack:///./apps/api/src/app/services/resource/index.ts","webpack:///./apps/api/src/app/controllers/pantry.controller.ts","webpack:///./apps/api/src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"typeorm\");","import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\n\r\n@Entity()\r\nexport class Pantry {\r\n    @PrimaryGeneratedColumn()\r\n    public id: number;\r\n\r\n    @Column()\r\n    public name: string;\r\n}","import { Pantry } from './pantry.entity';\r\n\r\nexport * from './modules';\r\n\r\nexport { Pantry } from './pantry.entity';\r\nexport const entities = [\r\n    Pantry\r\n];","import { Injectable } from \"@nestjs/common\";\r\nimport { IPayload, IPayloadData } from '../../common';\r\nimport { IPantryDTO } from '../../resources/pantry.model';\r\nimport { PantryRepoService } from '../repository';\r\nimport { Pantry } from '../../entities';\r\n\r\n@Injectable()\r\nexport class PantryResourceService {\r\n    constructor(\r\n        private pantryRepo: PantryRepoService\r\n    ) { }\r\n    \r\n    private readonly resourceType = 'pantry';\r\n\r\n    public async get(): Promise<IPayload<IPantryDTO>> {\r\n        const pantries = await this.pantryRepo.findAll();\r\n        return {\r\n            data: pantries.map((p) => ({\r\n                type: this.resourceType,\r\n                id: p.id.toString(),\r\n                attributes: this.mapPantryEntityToResource(p)\r\n            }))\r\n        };\r\n    }\r\n\r\n    public async upsert(request: IPayload<IPantryDTO>): Promise<IPayload<IPantryDTO>> {\r\n        const data = Array.isArray(request.data) ? request.data : [request.data];\r\n        const createdEntities: Pantry[] = [];\r\n        for (const d of data.filter((de) => de !== undefined && de !== null)) {\r\n            const newResource: Pantry = {\r\n                id: d.id ? parseInt(d.id, 10) : undefined,\r\n                name: d.attributes.name,\r\n            };\r\n            const p = await this.pantryRepo.add(newResource);\r\n            createdEntities.push(p);\r\n        }\r\n        const mappedEntities: IPayloadData<IPantryDTO>[] = createdEntities.map((e) => ({\r\n            id: e.id.toString(),\r\n            type: this.resourceType,\r\n            attributes: this.mapPantryEntityToResource(e)\r\n        }));\r\n\r\n        return {\r\n            data: Array.isArray(request.data)\r\n                ? mappedEntities\r\n                : (mappedEntities.length === 1 ? mappedEntities[0] : undefined)\r\n        }\r\n    }\r\n\r\n    private mapPantryEntityToResource(pantry: Pantry): IPantryDTO {\r\n        return {\r\n            name: pantry.name\r\n        };\r\n    }\r\n\r\n}","import { Injectable } from '@nestjs/common';\nimport { Message } from '@cooper/api-interfaces';\n\n@Injectable()\nexport class AppService {\n  getData(): Message {\n    return { message: 'Welcome to api!' };\n  }\n}\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Pantry } from '../../entities';\r\nimport { Repository } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class PantryRepoService {\r\n    constructor(\r\n        @InjectRepository(Pantry)\r\n        private pantryRepo: Repository<Pantry>,\r\n    ) { }\r\n\r\n    public async findAll(): Promise<Pantry[]> {\r\n        return this.pantryRepo.find();\r\n    }\r\n\r\n    public async add(pantry: Pantry) {\r\n        return this.pantryRepo.save(pantry);\r\n    }\r\n}","export * from './lib/api-interfaces';\n","export * from './pantry-repo.service';\r\n","export * from './models';\r\n","export * from './pantry.module';\r\n","import { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Module } from '@nestjs/common';\r\nimport { Pantry } from '../pantry.entity';\r\n\r\n@Module({\r\n    imports: [TypeOrmModule.forFeature([Pantry])],\r\n    exports: [TypeOrmModule]\r\n  })\r\n  export class PantryModule {}","export * from './payload.model';","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { join } from 'path';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport * as PostgressConnectionStringParser from \"pg-connection-string\";\nimport { entities } from './entities';\nimport { controllerModules } from './controllers/modules';\n\nconst databaseUrl: string = process.env.DATABASE_URL;\nconst connectionOptions = databaseUrl ? PostgressConnectionStringParser.parse(databaseUrl) : undefined;\n\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'pantry'),\n      exclude: ['/api*']\n    }),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: connectionOptions ? connectionOptions.host : 'localhost',\n      port: connectionOptions ? parseInt(connectionOptions.port, 10) : 5432,\n      username: connectionOptions ? connectionOptions.user : 'postgres',\n      password: connectionOptions ? connectionOptions.password : 'demo',\n      database: connectionOptions ? connectionOptions.database : 'cooper-pantry',\n      entities: [\n        ...entities,\n      ],\n      synchronize: true,\n    }),\n    ...controllerModules\n  ],\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule { }\n","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"path\");","import { Controller, Get } from '@nestjs/common';\n\nimport { Message } from '@cooper/api-interfaces';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('hello')\n  getData(): Message {\n    return this.appService.getData();\n  }\n}\n","module.exports = require(\"pg-connection-string\");","import { PantryHttpModule } from './pantry-http.module';\r\n\r\nexport const controllerModules = [\r\n    PantryHttpModule\r\n];","import { Module } from '@nestjs/common';\r\nimport { PantryModule } from '../../entities';\r\nimport { PantryResourceService } from '../../services/resource';\r\nimport { PantriesController } from '../pantry.controller';\r\nimport { PantryRepoService } from '../../services/repository/pantry-repo.service';\r\n\r\n@Module({\r\n    imports: [PantryModule],\r\n    providers: [PantryResourceService, PantryRepoService],\r\n    controllers: [PantriesController]\r\n})\r\nexport class PantryHttpModule { }","export * from './pantry-resource.service';\r\n","import { Controller, Get, Post, Body } from '@nestjs/common';\r\nimport { IPayload } from '../common';\r\nimport { PantryResourceService } from '../services/resource/pantry-resource.service';\r\nimport { IPantryDTO } from '../resources/pantry.model';\r\n\r\n@Controller('pantries')\r\nexport class PantriesController {\r\n    constructor(private service: PantryResourceService) { }\r\n\r\n    @Get()\r\n    public async get(): Promise<IPayload<IPantryDTO>> {\r\n        try {\r\n            return this.service.get();\r\n        } catch (err) {\r\n            return {\r\n                errors: [{\r\n                    status: '500',\r\n                    title: 'Failed to fetch pantries.'\r\n                }]\r\n            };\r\n        }\r\n    }\r\n\r\n    @Post()\r\n    public async post(@Body() pantry: IPayload<IPantryDTO>): Promise<IPayload<IPantryDTO>> {\r\n        try {\r\n            return this.service.upsert(pantry);\r\n        } catch (err) {\r\n            return {\r\n                errors: [{\r\n                    status: '500',\r\n                    title: 'Failed to fetch pantries.'\r\n                }]\r\n            };\r\n        }\r\n    }\r\n}","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.enableCors();\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port, () => {\n    console.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n"],"sourceRoot":""}